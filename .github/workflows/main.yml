name: Build

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    tags: [ v* ]
  pull_request:

jobs:
  build-openwrt:
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            sdk: https://downloads.openwrt.org/releases/23.05.3/targets/x86/64/openwrt-toolchain-23.05.3-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          - target: aarch64-unknown-linux-musl
            sdk: https://downloads.openwrt.org/releases/23.05.3/targets/armsr/armv8/openwrt-toolchain-23.05.3-armsr-armv8_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          - target: mipsel-unknown-linux-musl
            sdk: https://downloads.openwrt.org/releases/23.05.3/targets/ramips/mt7621/openwrt-toolchain-23.05.3-ramips-mt7621_gcc-12.3.0_musl.Linux-x86_64.tar.xz
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: |
          rustup toolchain add stable
          rustup +stable target add ${{ matrix.target }}
          mkdir -p ~/openwrt
          wget "${{ matrix.sdk }}" -qO- | tar --strip-components 1 -C ~/openwrt -xvJ
          toolchain="$(ls -d ~/openwrt/toolchain-*)"
          export PATH="${toolchain}/bin:$PATH"
          export CC_x86_64_unknown_linux_musl=x86_64-openwrt-linux-gcc
          export CXX_x86_64_unknown_linux_musl=x86_64-openwrt-linux-g++
          export AR_x86_64_unknown_linux_musl=x86_64-openwrt-linux-ar
          export CC_aarch64_unknown_linux_musl=aarch64-openwrt-linux-gcc
          export CXX_aarch64_unknown_linux_musl=aarch64-openwrt-linux-g++
          export AR_aarch64_unknown_linux_musl=aarch64-openwrt-linux-ar
          export CC_mipsel_unknown_linux_musl=mipsel-openwrt-linux-gcc
          export CXX_mipsel_unknown_linux_musl=mipsel-openwrt-linux-g++
          export AR_mipsel_unknown_linux_musl=mipsel-openwrt-linux-ar
          cargo +stable build --release --target ${{ matrix.target }}
          upx -9 target/${{ matrix.target }}/release/iptv
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/iptv
  build-windows:
    name: Build x86_64-pc-windows-gnu
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        pacboy: upx:p
    - name: Build
      run: |
        rustup set default-host x86_64-pc-windows-gnu
        rustup toolchain add stable-gnu
        cargo +stable build --release --target x86_64-pc-windows-gnu
        upx -9 ./target/x86_64-pc-windows-gnu/release/iptv.exe
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: x86_64-pc-windows-gnu
        path: target/x86_64-pc-windows-gnu/release/iptv.exe
